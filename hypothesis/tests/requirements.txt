# KaiABC Enhanced Hypothesis Testing - Python Dependencies
# Install with: pip install -r requirements.txt

# Core scientific computing (REQUIRED)
numpy>=1.21.0

# Statistical analysis and confidence intervals (RECOMMENDED)
# Provides Wilson score intervals for rigorous uncertainty quantification
scipy>=1.7.0

# Machine learning and dimensionality reduction (RECOMMENDED)
# Required for effective degrees of freedom analysis (PCA-based N_eff measurement)
scikit-learn>=1.0.0

# Plotting and visualization (OPTIONAL)
# Enables publication-quality plots and formula comparison visualizations
matplotlib>=3.5.0

# Progress bars for long simulations (OPTIONAL)
# Shows progress during Monte Carlo trials and adaptive sampling
tqdm>=4.65.0

# Installation Notes:
# - numpy: Required for all numerical computations
# - scipy: Strongly recommended for proper confidence interval calculations
# - scikit-learn: Required for effective degrees of freedom analysis (PCA)
# - matplotlib: Optional but recommended for result visualization
# - tqdm: Optional but improves user experience for long-running tests
# - cupy-cuda11x: Optional but provides massive speedup for GPU-enabled simulations
#
# GPU Setup Requirements:
# 1. NVIDIA GPU with CUDA support (compute capability >= 3.0)
# 2. NVIDIA drivers installed (nvidia-driver-470 for older GPUs)
# 3. CUDA toolkit 11.x installed
# 4. Install GPU libraries: pip install cupy-cuda11x
#
# Install all: pip install -r requirements.txt
# Install core only: pip install numpy
# Install with plotting: pip install numpy scipy matplotlib
# Install with GPU support: pip install numpy scipy matplotlib cupy-cuda11x

# GPU Acceleration (OPTIONAL)
# For large-scale simulations, consider installing CuPy or PyTorch with CUDA support.
# Example for CuPy (best for NumPy-like code):
# pip install cupy-cuda11x
# Example for PyTorch with CUDA:
# pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

# GPU Computing Libraries (OPTIONAL - for GPU acceleration)
# CuPy: Drop-in NumPy replacement with CUDA support (recommended for this codebase)
cupy-cuda11x>=12.0.0

# Alternative: PyTorch with CUDA support (more general-purpose ML framework)
# torch>=1.13.0+cu118
# torchvision>=0.14.0+cu118
# torchaudio>=0.13.0+cu118


sklearn>=1.0.0